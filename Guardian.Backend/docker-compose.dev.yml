version: '3.4'

services:
  guardian:
    image: ${DOCKER_REGISTRY-}guardian
    build:
      context: .
      dockerfile: Guardian/Dockerfile
    depends_on:
      - broker
      - zookeeper
      - mssqldb
    networks:
      - sharpdj-net

  guardian.logging.api:
    image: ${DOCKER_REGISTRY-}guardianloggingapi
    build:
      context: .
      dockerfile: Guardian.Microservices/Guardian.Logging.Api/Dockerfile
    depends_on:
      - broker
      - zookeeper
      - mssqldb
    networks:
      - sharpdj-net


# Kafka KRaft compose
  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  broker:
    image: confluentinc/cp-kafka:7.0.1
    container_name: broker
    ports:
    # To learn about configuring Kafka for access across networks see
    # https://www.confluent.io/blog/kafka-client-cannot-connect-to-broker-on-aws-on-docker-etc/
      - "9092:9092"
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://broker:29092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

# built-in MSSQL Server
  mssqldb:
    container_name: mssqldb
    user: root
    volumes:
      - ./volumes/database:/var/opt/mssql/data
    image: mcr.microsoft.com/mssql/server:2019-latest
    ports:
    - "1433:1433"
    environment:
          SA_PASSWORD: "Qwerty1!"
          ACCEPT_EULA: "Y"
    networks:
    - guardian-net
    
networks:
    guardian-net:
        driver: bridge